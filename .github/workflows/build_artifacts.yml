name: Create Release and Build Artifacts

# Disclaimer, most of this was generated by google gemini
# open to tweaks as needed.
on:
  push:
    tags:
      - "v*.*.*" # Trigger on tags matching semantic versioning

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to fetch tags

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu aarch64-apple-darwin

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Build for x86_64 Linux
        run: cargo build --release --target x86_64-unknown-linux-gnu
        env:
          CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER: "rust-lld"

      - name: Build for AArch64 Linux
        run: cargo build --release --target aarch64-unknown-linux-gnu
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: "rust-lld"

      - name: Build for AArch64 macOS
        run: cargo build --release --target aarch64-apple-darwin

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false

      - name: Upload x86_64 Linux binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-unknown-linux-gnu/release/startprox
          asset_name: startprox-x86_64-linux
          asset_content_type: application/octet-stream

      - name: Upload AArch64 Linux binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/aarch64-unknown-linux-gnu/release/startprox
          asset_name: startprox-aarch64-linux
          asset_content_type: application/octet-stream

      - name: Upload AArch64 macOS binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/aarch64-apple-darwin/release/startprox
          asset_name: startprox-aarch64-macos
          asset_content_type: application/octet-stream
